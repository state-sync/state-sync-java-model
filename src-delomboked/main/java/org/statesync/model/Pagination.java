// Generated by delombok at Tue Jul 03 21:08:31 NOVT 2018
package org.statesync.model;

import java.util.ArrayList;
import java.util.List;

public class Pagination {
	public int currentPage;
	public int totalPages;
	public long totalElements;
	public List<PaginationItem> pages;

	public Pagination(final int currentPage, final int totalPages, final long totalElements, final int steps) {
		this.currentPage = currentPage;
		this.totalPages = totalPages;
		this.totalElements = totalElements;
		this.pages = new ArrayList<>();
		final int count = steps;
		final int start = steps * (currentPage / steps);
		this.pages.add(new PaginationItem(PaginationItemType.prev, start - steps, start == 0, "", ""));
		for (int i = start; i < start + count; i++) {
			this.pages.add(new PaginationItem(PaginationItemType.normal, i, i >= this.totalPages, Integer.toString(i + 1), ""));
		}
		this.pages.add(new PaginationItem(PaginationItemType.next, start + steps, totalPages <= start + steps, "", ""));
	}

	@java.lang.SuppressWarnings("all")
	public int getCurrentPage() {
		return this.currentPage;
	}

	@java.lang.SuppressWarnings("all")
	public int getTotalPages() {
		return this.totalPages;
	}

	@java.lang.SuppressWarnings("all")
	public long getTotalElements() {
		return this.totalElements;
	}

	@java.lang.SuppressWarnings("all")
	public List<PaginationItem> getPages() {
		return this.pages;
	}

	@java.lang.SuppressWarnings("all")
	public void setCurrentPage(final int currentPage) {
		this.currentPage = currentPage;
	}

	@java.lang.SuppressWarnings("all")
	public void setTotalPages(final int totalPages) {
		this.totalPages = totalPages;
	}

	@java.lang.SuppressWarnings("all")
	public void setTotalElements(final long totalElements) {
		this.totalElements = totalElements;
	}

	@java.lang.SuppressWarnings("all")
	public void setPages(final List<PaginationItem> pages) {
		this.pages = pages;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public boolean equals(final java.lang.Object o) {
		if (o == this) return true;
		if (!(o instanceof Pagination)) return false;
		final Pagination other = (Pagination) o;
		if (!other.canEqual((java.lang.Object) this)) return false;
		if (this.getCurrentPage() != other.getCurrentPage()) return false;
		if (this.getTotalPages() != other.getTotalPages()) return false;
		if (this.getTotalElements() != other.getTotalElements()) return false;
		final java.lang.Object this$pages = this.getPages();
		final java.lang.Object other$pages = other.getPages();
		if (this$pages == null ? other$pages != null : !this$pages.equals(other$pages)) return false;
		return true;
	}

	@java.lang.SuppressWarnings("all")
	protected boolean canEqual(final java.lang.Object other) {
		return other instanceof Pagination;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public int hashCode() {
		final int PRIME = 59;
		int result = 1;
		result = result * PRIME + this.getCurrentPage();
		result = result * PRIME + this.getTotalPages();
		final long $totalElements = this.getTotalElements();
		result = result * PRIME + (int) ($totalElements >>> 32 ^ $totalElements);
		final java.lang.Object $pages = this.getPages();
		result = result * PRIME + ($pages == null ? 43 : $pages.hashCode());
		return result;
	}

	@java.lang.Override
	@java.lang.SuppressWarnings("all")
	public java.lang.String toString() {
		return "Pagination(currentPage=" + this.getCurrentPage() + ", totalPages=" + this.getTotalPages() + ", totalElements=" + this.getTotalElements() + ", pages=" + this.getPages() + ")";
	}

	@java.lang.SuppressWarnings("all")
	public Pagination() {
	}
}
